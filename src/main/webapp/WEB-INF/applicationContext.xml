<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:aop="http://www.springframework.org/schema/aop" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" 
	   xmlns:tx="http://www.springframework.org/schema/tx" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- 自动扫描与装配bean -->
	 <!-- 包含annotation-config。spring可以自动去扫描base-pack下面或者子包下面的java文件，如果扫描到有@Component @Controller@Service等这些注解的类，则把这些类注册为bean-->
	 <context:component-scan base-package="com.bbs.wondering"></context:component-scan>
	 <!-- 导入外部的properties文件 -->
 	<context:property-placeholder location="/WEB-INF/mysql.properties"/>
 	<!-- 配置sessionFactory -->
 	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
 	 	<!-- 指定hibernate的配置文件位置 -->
 		<property name="configLocation" value="/WEB-INF/hibernate.cfg.xml"></property>
 		<!-- 配置c3p0数据库连接池 -->
 		<property name="dataSource">
	 		<bean class="com.mchange.v2.c3p0.ComboPooledDataSource">
					<!-- 数据连接信息 -->
					<property name="jdbcUrl" value="${jdbcUrl}"></property>
					<property name="driverClass" value="${driverClass}"></property>
					<property name="user" value="${user}"></property>
					<property name="password" value="${password}"></property>
					<!-- 其他配置 -->
					<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
					<property name="initialPoolSize" value="3"></property>
					<!--连接池中保留的最小连接数。Default: 3 -->
					<property name="minPoolSize" value="3"></property>
					<!--连接池中保留的最大连接数。Default: 15 -->
					<property name="maxPoolSize" value="5"></property>
					<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
					<property name="acquireIncrement" value="3"></property>
					<!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
					<property name="maxStatements" value="8"></property>
					<!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->
					<property name="maxStatementsPerConnection" value="5"></property>
					<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
					<property name="maxIdleTime" value="1800"></property>
	   		</bean>
		</property>
	</bean>
	<!-- 配置声明式事务管理（采用注解的方式） -->
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
 	<tx:annotation-driven transaction-manager="txManager"/>

<!-- 之前配置 -->
<!-- 	<context:annotation-config />
	<context:component-scan base-package="com.bbs.wondering.controller">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	
	<mvc:annotation-driven />
	HandlerMapping
	<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>
	HandlerAdapter
	<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>
	BeanNameUrlHandlerMapping：表示将请求的URL和Bean名字映射，如URL为 “上下文/hello”，则Spring配置文件必须有一个名字为“/hello”的Bean，上下文默认忽略。
		SimpleControllerHandlerAdapter：表示所有实现了org.springframework.web.servlet.mvc.Controller接口的Bean可以作为Spring Web MVC中的处理器。如果需要其他类型的处理器可以通过实现HadlerAdapter来解决。
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>

<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	<property name="configLocation"> 
		<value>classpath:hibernate.cfg.xml</value>
	</property>
	</bean> -->
	

</beans>